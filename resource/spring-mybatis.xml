<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
                     http://www.springframework.org/schema/tx 
                     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.1.xsd
                     http://www.springframework.org/schema/aop 
                     http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                     http://www.springframework.org/schema/util 
                     http://www.springframework.org/schema/util/spring-util-3.1.xsd">
                     
	
	<!-- dbcp数据源管理 -->
	<!-- 本地连接数据源管理-->
	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverName}" />
		<property name="url" value='${local.url}'></property>
		<property name="username" value="${local.username}" />
		<property name="password" value="${local.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="defaultAutoCommit" value="${dbcp.defaultAutoCommit}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
		<property name="testOnBorrow" value="${dbcp.testOnBorrow}" />
		<property name="validationQuery" value="${dbcp.validationQuery}"/>
		<property name="logAbandoned" value="true" />
	</bean>

	<!-- 远程连接数据源管理
    <bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverName}" />
		<property name="url" value='${remote.url}'></property>
		<property name="username" value="${remote.username}" />
		<property name="password" value="${remote.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="defaultAutoCommit" value="${dbcp.defaultAutoCommit}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
		<property name="testOnBorrow" value="${dbcp.testOnBorrow}" />
		<property name="validationQuery" value="${dbcp.validationQuery}"/>
		<property name="logAbandoned" value="true" />
	</bean> -->
	
	
	<!-- 配置SqlSessionFactoryBean工厂 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载本地mybatis配置路径 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 加载xml映射配置文件 -->
		<property name="mapperLocations" value="classpath*:easybuy/**/mapper/*.xml"></property>
	</bean>
	
	<!-- 配置接口方式产生dao bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="easybuy.managers.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
	</bean>
	<!-- 配置mybatis的操作模板工具类 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sessionFactory" />
	</bean>
	
	
	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		    <tx:method name="*Register" propagation="REQUIRED" />
		    <tx:method name="*Login" propagation="REQUIRED" />
		    <tx:method name="*LoginOut" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut"	expression="execution(* easybuy.*.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"	advice-ref="transactionAdvice" />
	</aop:config>
	
    <!-- 配置缓存管理 -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>

	<bean id="cache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref bean="cacheManager" />
		</property>
		<property name="cacheName">
			<value>cache</value>
		</property>
	</bean>

</beans>